services:

  nginx:
    container_name: nginx
    image: public.ecr.aws/nginx/nginx:1.27
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_files:/app/static
    depends_on:
      - web
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:80/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network


  web:
    container_name: web
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - static_files:/app/static
      # Debug Mode
      - ./:/app
    links:
      - postgres
    command: >
      sh -c "python manage.py migrate 
      && python manage.py collectstatic --noinput
      && cp -r /app/staticfiles/* /app/static/
      && python manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  postgres:
    container_name: postgres
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  whatsapp-api:
    container_name: whatsapp_api
    build: ./whatsapp_api
    ports:
      - "3000:3000"
    environment:
      - EVENT_LOGGER_URL=http://whatsapp-app:8000/events
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  whatsapp-app:
    container_name: whatsapp_app
    build: ./whatsapp_app
    depends_on:
      - whatsapp-api
      - ollama
    networks:
      - app-network
    restart: always
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    container_name: ollama
    build: ./ollama
    volumes:
      - ollama:/root/.ollama
    tty: true
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  static_files:
  ollama: {}
